#!/bin/sh

set -e

# Print out the host we are running on so that we know which node things fail
# on when doing git push all
hostname -f

# post-update hook for /etc/puppet-bare to update /etc/puppet and apply config
echo '---- Pulling changes into /etc/puppet -----'

cd /etc/puppet
unset GIT_DIR

# First pull updates without the submodules - this gives us a chance
# to fix broken repositories for any submodules
git pull --quiet --recurse-submodules=no bare  master

# sync the submodules so as to pick up changes to their remotes
git submodule --quiet sync

# now try to pull in the upstream changes for submodules too (if a
# remote is not available this command will fail and abort the script
git pull --quiet --recurse-submodules=yes bare  master

# checkout the commit specified in .gitmodules for each submodule
git submodule --quiet update --init

# Make sure the permissions on the files we've created are such that
# future people can run this script: set the group to adm, mirror
# permissions from user to group, set group sticky
sudo chmod -R --quiet g+u . .git || true
sudo chgrp -R --quiet adm . .git || true
find . -type d -print0 | xargs -0 sudo chmod --quiet g+s || true
find .git -type d -print0 | xargs -0 sudo chmod --quiet g+s || true

# Delete any files that are not part of the git repository
# else they break etckeeper and we have to manually remove them.
# Which is a pain.
git clean -fffd

echo '---- Applying new recipes ----'
# Need -H so that HOME is set to /root as some stuff gets put there by puppet
#  e.g. mysql
sudo -H puppet apply --modulepath modules manifests/nodes/
