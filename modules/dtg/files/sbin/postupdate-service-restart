#!/bin/bash

set -e

# Intended to be run from cron to check that all services have been restarted that need to be after an update.

nonefound="Found 0 processes using old versions of upgraded files"

checkrestartcommand='sudo checkrestart -b /usr/local/etc/checkrestart_blacklist'

# If the output indicates that checkrestart can do nothing then skip
ckrestart=`$checkrestartcommand`
if [[ $ckrestart == *"(0 distinct packages)"* ]]; then
	exit 0
fi
if [[ $ckrestart == *"$nonefound"* ]]; then
	exit 0
fi
# Postgres and mysql are not handled by checkrestart so when it tells us it doesn't know what to do, just do it.
if [[ $ckrestart == *mysql* ]]; then
	echo "Triggering mysql restart"
	sudo service mysql restart
fi
if [[ $ckrestart == *postgresql* ]]; then
	echo "Triggering postgresql restart"
	sudo service postgresql restart
fi
# Restart java based things
if [[ $ckrestart == *openjdk* ]]; then
	# Get the list of pids of java processes, perl puts the newlines back in
	pids=`echo $ckrestart | perl -pe 's/(.*?)\s([0-9].*?)/\1\n \2/g' | sed 's|.*\s\+\([0-9]\+\)\s\+/usr/lib/jvm.*|\1|' | grep '^[0-9]*$'`
	for pid in $pids; do
		if [[ -n "$pid" ]]; then
			username=`getent passwd $(cat /proc/$pid/status | grep Uid | tr '[:space:]' ' ' | cut -d " " -f 2) | cut -d ':' -f 1`
			if [[ $username == tomcat* ]] || [[ $username == sonar ]] || [[ $username == elasticsearch ]] || [[ $username == crucible ]] ; then
				echo "Triggering $username restart"
				sudo service $username restart
			fi
		fi
	done
fi

# Try and automatically restart as much as we can
# When $nonefound exists it is the only line and so the rest does not execute.
services=`$checkrestartcommand | grep --line-regexp 'service [a-zA-Z0-9\.\-]* restart' | sed 's/service \([a-Z0-9\.\-]*\) restart/\1/'`

if [ ! -z "$services" ]; then
	echo "Restarting services: $services"
fi

for service in $services; do sudo service "$service" restart; done

# If there are still things left then this will output text which will be emailed by cron or displayed to the sysadmin

$checkrestartcommand | grep -v "$nonefound" || true # grep returns 1 if it finds nothing
