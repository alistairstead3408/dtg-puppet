 input {
    syslog {
	type => syslog
	port => 5544
    }
}

filter {
# This replaces the host field (UDP source) with the host that generated the message (sysloghost)
    if [sysloghost] {
	mutate {
	    replace => [ "host", "%{sysloghost}" ]
	    remove_field => "sysloghost" # prune the field after successfully replacing "host"
	}
    }
    if [type] == "syslog" {
	grok {
	    patterns_dir => "/opt/logstash/patterns"
	    match => { "message" => "%{FWGROK}" }
	    match => { "message" => "%{AUDITAVC}" }
	}
    }
    if [type] == "syslogjson" {
	grok {
	    patterns_dir => "/opt/logstash/patterns"
	    match => { "message" => "%{FWGROK}" }
	    match => { "message" => "%{AUDITAVC}" }
	    match => { "message" => "%{COMMONAPACHELOG}" }
	    tag_on_failure => []
	}
    }
# This filter populates the @timestamp field with the timestamp that's in the actual message
# dirsrv logs are currently pulled in every 2 minutes, so @timestamp is wrong
    if [syslogtag] == "dirsrv" {
	mutate {
	    remove_field => [ 'rawmsg' ]
	}
	grok {
	    match => [ "message", "%{HTTPDATE:log_timestamp}" ]
	}
	date {
	    match => [ "log_timestamp", "dd/MMM/YYY:HH:mm:ss Z"]
	    locale => "en"
	    remove_field => [ "log_timestamp" ]
	}
    }
}

output {
    elasticsearch {
	protocol => node
	node_name => "elk-index"
    }
}
